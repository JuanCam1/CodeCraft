/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as CategoriesIndexImport } from './routes/categories/index'
import { Route as ReactHooksImport } from './routes/react/hooks'
import { Route as CategoriesCategoryIdImport } from './routes/categories/$categoryId'
import { Route as CategoriesArticlesIndexImport } from './routes/categories/articles/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesIndexRoute = CategoriesIndexImport.update({
  id: '/categories/',
  path: '/categories/',
  getParentRoute: () => rootRoute,
} as any)

const ReactHooksRoute = ReactHooksImport.update({
  id: '/react/hooks',
  path: '/react/hooks',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesCategoryIdRoute = CategoriesCategoryIdImport.update({
  id: '/categories/$categoryId',
  path: '/categories/$categoryId',
  getParentRoute: () => rootRoute,
} as any)

const CategoriesArticlesIndexRoute = CategoriesArticlesIndexImport.update({
  id: '/categories/articles/',
  path: '/categories/articles/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/categories/$categoryId': {
      id: '/categories/$categoryId'
      path: '/categories/$categoryId'
      fullPath: '/categories/$categoryId'
      preLoaderRoute: typeof CategoriesCategoryIdImport
      parentRoute: typeof rootRoute
    }
    '/react/hooks': {
      id: '/react/hooks'
      path: '/react/hooks'
      fullPath: '/react/hooks'
      preLoaderRoute: typeof ReactHooksImport
      parentRoute: typeof rootRoute
    }
    '/categories/': {
      id: '/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof CategoriesIndexImport
      parentRoute: typeof rootRoute
    }
    '/categories/articles/': {
      id: '/categories/articles/'
      path: '/categories/articles'
      fullPath: '/categories/articles'
      preLoaderRoute: typeof CategoriesArticlesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/react/hooks': typeof ReactHooksRoute
  '/categories': typeof CategoriesIndexRoute
  '/categories/articles': typeof CategoriesArticlesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/react/hooks': typeof ReactHooksRoute
  '/categories': typeof CategoriesIndexRoute
  '/categories/articles': typeof CategoriesArticlesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/categories/$categoryId': typeof CategoriesCategoryIdRoute
  '/react/hooks': typeof ReactHooksRoute
  '/categories/': typeof CategoriesIndexRoute
  '/categories/articles/': typeof CategoriesArticlesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/categories/$categoryId'
    | '/react/hooks'
    | '/categories'
    | '/categories/articles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/categories/$categoryId'
    | '/react/hooks'
    | '/categories'
    | '/categories/articles'
  id:
    | '__root__'
    | '/'
    | '/categories/$categoryId'
    | '/react/hooks'
    | '/categories/'
    | '/categories/articles/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CategoriesCategoryIdRoute: typeof CategoriesCategoryIdRoute
  ReactHooksRoute: typeof ReactHooksRoute
  CategoriesIndexRoute: typeof CategoriesIndexRoute
  CategoriesArticlesIndexRoute: typeof CategoriesArticlesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CategoriesCategoryIdRoute: CategoriesCategoryIdRoute,
  ReactHooksRoute: ReactHooksRoute,
  CategoriesIndexRoute: CategoriesIndexRoute,
  CategoriesArticlesIndexRoute: CategoriesArticlesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/categories/$categoryId",
        "/react/hooks",
        "/categories/",
        "/categories/articles/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/categories/$categoryId": {
      "filePath": "categories/$categoryId.tsx"
    },
    "/react/hooks": {
      "filePath": "react/hooks.tsx"
    },
    "/categories/": {
      "filePath": "categories/index.tsx"
    },
    "/categories/articles/": {
      "filePath": "categories/articles/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
